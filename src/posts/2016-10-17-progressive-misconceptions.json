{
	"disqus": {
		"path": "/notebook/progressive-misconceptions/",
		"commentCount": 3,
		"comments": [
			{
				"postId": "2955822127",
				"parentPostId": null,
				"date": "2016-10-18T02:40:28Z",
				"author": "Eric Newport",
				"avatar": "https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=mm&s=60",
				"message": "<p>What I don't see either in Nolan's article or in yours is anyone addressing what seems to me to be the core of the debate: whether or not PE should be the default for most web apps.</p><p>We all know the extreme cases where PE is objectively the right tool for the job, e.g. Wikipedia, and other extremes where it's objectively not, e.g. Angry Birds.</p><p>But the debate isn't about whether those extremes exist, it's about whether most apps are closer to Wikipedia or closer to Angry Birds on the spectrum.</p><p>If you believe most apps are closer to Wikipedia than Angry Birds on the spectrum, then you tend to insist that people should consider PE the default and expect to see good justifications for why it isn't used on a given project.</p><p>If you believe most apps are closer to Angry Birds than Wikipedia on the spectrum, then you tend to insist that people should not be required to use PE by default and expect to see good justifications for why it is needed on a given project.</p><p>Since the split is based on perceptions of the average use case, an inherently foggy and difficult to measure metric, adherence to one side or the other tends to resemble that of a partisan political divide.</p><p>From a psychological standpoint, the whole debate seems not unlike conservatives and liberals debating real political world views. And I think that goes a long way towards explaining why it is so divisive.</p><p>That said, I think we do need to settle the question of whether PE should be the default for most projects, or at least carve out some very clear and well agreed upon classes of apps where it is or isn't the right tool for the job, rather than philosophizing about it vaguely back and forth one side against the other.</p><p>This is science. We should be able to resolve this with metrics. In my view it's sad that it resembles partisan politics so much.</p>",
				"replies": [
					{
						"postId": "2956628225",
						"parentPostId": "2955822127",
						"date": "2016-10-18T15:35:54Z",
						"author": "Aaron Gustafson",
						"avatar": "https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=mm&s=60",
						"message": "<p>I’m 100% with you. I had originally intended to discuss when PE is appropriate and when it might not make sense, but it was going to be a fairly big tangent for this piece. I’m working on a follow-up.</p><p>I’m also 100% with you on the polarization angle and it has a lot to do with our circles on the Web. The more time we spend within communities that only think/talk/work like us, the more set we become in our ways, staunch we become in our views, and convinced we become that we are right and anyone who thinks differently is wrong. It happens in many areas. Politics and code certainly, but I imagine there’s some heated debate within other groups as well. I see a bit of it in the reef-keeping community and it probably exists in knitting circles too.</p><p>It’s incredibly important to expose yourself to new ideas and perspectives. It’s how we learn and it’s how we grow. It’s also how we identify the ideas we share and recognize our similarities rather than focusing on our differences.</p>",
						"replies": [
							{
								"postId": "2956751496",
								"parentPostId": "2956628225",
								"date": "2016-10-18T16:49:29Z",
								"author": "Nolan Lawson",
								"avatar": "https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=mm&s=60",
								"message": "<p>This is a great discussion! I agree that we need to find more points of commonality.</p><p>Personally, coming from a community that focused on JavaScript, SPAs, and client-side frameworks, it took me a long time to even discover that PE advocates were out there, or that they had interesting things to say. The PE point of view was rarely represented in any of the blogs/meetups/podcasts that formed my education as a webdev.</p><p>And that's a shame, because both sides have a lot to teach the other. Consider how long it took for JS frameworks to finally recognize that server-side rendering was a good idea!</p><p>As I said in my post, I think the reason there's been so little dialogue is because the subject is a bit of a third rail. To borrow your political analogy, it's like trying to get progressives and conservatives together to talk about reproductive health – good luck having a calm discussion where nobody raises their voice or starts making accusations!</p><p>As for the question of the \"spectrum\" between Angry Birds and Wikipedia, these are definitely the kinds of questions we need to start asking. Laurie Voss also raised this point: <a href=\"http://seldo.com/weblog/2016/10/14/web_development_has_two_flavors_of_graceful_degradation\" rel=\"nofollow noopener\" title=\"http://seldo.com/weblog/2016/10/14/web_development_has_two_flavors_of_graceful_degradation\">http://seldo.com/weblog/201...</a> .</p><p>I'm sure that a spectrum exists. To be honest, though, I'm not convinced that even the Wikipedia case is a slam-dunk for the PE side – when I'm using an Android phone, I vastly prefer Jake Archibald's Offline Wikipedia (<a href=\"https://jakearchibald.github.io/offline-wikipedia/)\" rel=\"nofollow noopener\" title=\"https://jakearchibald.github.io/offline-wikipedia/)\">https://jakearchibald.githu...</a> because it's legitimately a better user experience: works offline, can save articles for later viewing, very fast search, etc. And it's just a typical progressive web app: if you turn off JS, you get an empty app shell.</p><p>I watched a talk by Henrik Joreteg recently (<a href=\"https://youtu.be/hrAssE8meRo)\" rel=\"nofollow noopener\" title=\"https://youtu.be/hrAssE8meRo)\">https://youtu.be/hrAssE8meRo)</a> that I think does a good job of laying out the use cases for the two different experiences. He points out that Twitter has a hybrid use case – when you land on a Tweet from some other website, you just want it to load fast (don't bootstrap a 2MB JS app just to show 140 characters!) whereas when you go to <a href=\"http://Twitter.com\" rel=\"nofollow noopener\" title=\"Twitter.com\">Twitter.com</a>, you actually want more of a full-fledged app experience.</p><p>Part of it is the question of optimizing for first-time visitors vs repeat visitors, and part of it the question of optimizing for the home page experience vs a leaf page experience. But the conflict can exist within the same site.</p><p>Another point he makes is that we've largely solved this problem on desktop (the desktop web is winning) whereas it's really only on mobile that we need to rethink our best practices (instead of just giving up and writing a native app, as many are doing). This IMO is where offline-first comes in, which is why I was so gung-ho about it in my blog post.</p><p>So maybe if you expect most of your users to come from mobile (where you have a much less reliable network connection), then your default choice should be an offline-first PWA rather than a PE static site. OTOH this might not play well to your team's skill set (if they're stronger in HTML/CSS than in JS), but I'm hopeful that eventually there will be frameworks for PWAs that will make it as easy to build a PWA as it is to build a WordPress site. (One can hope, right!)</p><p>Anyway, all interesting discussions. :) Let's keep the conversation going.</p>",
								"replies": []
							}
						]
					}
				]
			}
		]
	}
}
