/*------------------------------------*\
Block-level Semantics
\*------------------------------------*/
@include breakup-breakpoint( "global" ) {
	
	* {
		margin-top: 0;
		margin-bottom: 0;
		
		@supports (margin-inline-start: 1em) {
			margin: unset;
			margin-block: 0;
		}
	}
	
	* + * {
		@include rem( margin-top, $default-spacing );

		@supports (margin-inline-start: 1em) {
			margin-top: unset;
			@include rem( margin-block-start, $default-spacing, false );
		}
	}
	
	noscript {
		display: none;
	}

	p:empty {
		display: none;
	}
	
	blockquote {
		
		@include rem( font-size, $font-size-body );
		font-family: $font-stack-serif;
		font-style: italic; 
		
		hanging-punctuation: first;
		hyphens: none;

		margin-left: auto;
		margin-right: auto;
		@include rem( padding, 0 $default-spacing );
		@include rem( max-width, 700 );

		@supports (margin-inline-start: 1em) {
			@include unset( [margin-left, margin-right, padding, max-width] );
			margin-inline: auto;
			padding-block: 0;
			@include rem( padding-inline, $default-spacing, false );
			@include rem( max-inline-size, 700, false );
		}
		
	}
	
	.blockquote__attribution {
		
		font-family: $font-stack-sansserif;
		
		margin: 0;
		@include rem( padding-left, 2 * $default-spacing );

		@supports (margin-inline-start: 1em) {
			@include unset( [margin, padding-left] );
			margin-block: 0;
			margin-inline: 0;
			@include rem( padding-inline-start, 2 * $default-spacing, false );
		}
		
		cite {
			font-style: normal;
		}
		
	}
	
	p {
		font-weight: normal;
		/*hyphens: auto;*/
		line-height: $line-height-default;
		
		.wf-active & {
			word-spacing: 2px;
		}
	}
	
	[aria-hidden="true"] {
		display: none;
	}
	
	hr {
		border: 0;
		border-top: 1px solid $color-rule;
		
		height: 0;
		@include rem( margin, $default-spacing auto );

		@supports (margin-inline-start: 1em) {
			@include unset( [border-top, height, margin] );
			border-block-start: 1px solid $color-rule;
			block-size: 0;
			margin-inline: auto;
			@include rem( margin-block, $default-spacing, false );
		}
	}
	
	section + section {
		@include rem( margin-top, $default-spacing * 2 );

		@supports (margin-inline-start: 1em) {
			margin-top: unset;
			@include rem( margin-block-start, $default-spacing * 2, false );
		}
	}
	
}

dialog::backdrop {
	background: rgba( $color-black, .4 );
}
/* polyfill */
dialog + .backdrop {
	background: rgba( $color-black, .4 );
}

@include breakup-breakpoint( "medium" ) {
	blockquote,
	dl {
		@include rem( padding, 0 $default-spacing );

		@supports (margin-inline-start: 1em) {
			padding: unset;
			padding-block: 0;
			@include rem( padding-inline, $default-spacing, false );
		}
	}
}

@include breakup-breakpoint( "full" ) {
	blockquote,
	dl {
		@include rem( padding, 0 ( 3 * $default-spacing ) );

		@supports (margin-inline-start: 1em) {
			padding: unset;
			padding-block: 0;
			@include rem( padding-inline, ( 3 * $default-spacing ), false );
		}
	}
}

@include breakup-breakpoint( "print" ) {
	p, ol, ol, dl {
		hyphens: auto;
		orphans: 3;
		widows: 3;
	}
}

// remove junk added by extensions
body > script:last-of-type ~ * {
	margin: 0;

	@supports (margin-inline-start: 1em) {
		margin: unset;
		margin-block: 0;
		margin-inline: 0;
	}
}
